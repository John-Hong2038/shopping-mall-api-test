openapi: 3.0.0
info:
  title: 네이버 스마트스토어 API - Sotatek Test
  version: 1.0.0
  description: |
    ## 인증 정보
    - Application ID: 5TGnBVoGoWQgKYg6KrDcKW
    - Store: sotatek test
    - API 호출 IP: 162.120.185.40
    - 문서 작성일: 2025년 9월 19일

servers:
  - url: https://api.commerce.naver.com
    description: 네이버 커머스 API 서버

tags:
  - name: 인증
    description: OAuth 2.0 토큰 발급
  - name: 상품 관리
    description: 상품 조회, 등록, 수정
  - name: 주문 관리
    description: 주문 조회, 상태 변경, 취소

paths:
  # ===== 토큰 발급 (제일 먼저 실행!) =====
  /external/v1/oauth2/token:
    post:
      tags:
        - 인증
      summary: 🔑 Access Token 발급 (먼저 실행하세요!)
      description: |
        ## 이 API를 먼저 실행해야 다른 API 사용 가능!
        1. Try it out 클릭
        2. client_secret 입력 (팀 리더에게 문의)
        3. Execute 실행
        4. 응답에서 access_token 복사
        5. 다른 API의 Authorization 헤더에 "Bearer {토큰}" 형식으로 입력
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - client_id
                - client_secret
                - grant_type
                - type
              properties:
                client_id:
                  type: string
                  default: "5TGnBVoGoWQgKYg6KrDcKW"
                  description: 애플리케이션 ID
                client_secret:
                  type: string
                  example: "YOUR_SECRET_KEY_HERE"
                  description: 시크릿 키를 여기에 입력하세요
                grant_type:
                  type: string
                  default: "client_credentials"
                type:
                  type: string
                  default: "SELF"
                  enum: [SELF, SELLER]
      responses:
        200:
          description: 토큰 발급 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: 이 토큰을 복사해서 사용하세요
                  token_type:
                    type: string
                  expires_in:
                    type: integer
              example:
                access_token: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                token_type: "Bearer"
                expires_in: 86400

  # ===== 상품 조회 (v2 API) =====
  /v2/products:
    post:
      tags:
        - 상품 관리
      summary: 상품 조회 (검색)
      description: 상품을 검색합니다
      parameters:
        - name: Authorization
          in: header
          required: true
          description: "Bearer {access_token} 형식으로 입력"
          schema:
            type: string
            example: "Bearer eyJ0eXAiOiJKV1QiLCJhbGc..."
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  example: 1
                size:
                  type: integer
                  example: 10
      responses:
        200:
          description: 조회 성공
          content:
            application/json:
              schema:
                type: object

  # ===== 상품 등록 =====
  /v2/products:
    post:
      tags:
        - 상품 관리
      summary: 상품 등록
      description: 신규 상품을 등록합니다
      parameters:
        - name: Authorization
          in: header
          required: true
          description: "Bearer {access_token} 형식으로 입력"
          schema:
            type: string
            example: "Bearer eyJ0eXAiOiJKV1QiLCJhbGc..."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - salePrice
                - stockQuantity
              properties:
                name:
                  type: string
                  example: "테스트 상품"
                salePrice:
                  type: integer
                  example: 10000
                stockQuantity:
                  type: integer
                  example: 100
      responses:
        201:
          description: 등록 성공

  # ===== 주문 조회 (실제 API 경로) =====
  /v1/pay-order/seller/product-orders:
    get:
      tags:
        - 주문 관리
      summary: 주문 상품 조회
      description: 주문 상품 목록을 조회합니다
      parameters:
        - name: Authorization
          in: header
          required: true
          description: "Bearer {access_token} 형식으로 입력"
          schema:
            type: string
            example: "Bearer eyJ0eXAiOiJKV1QiLCJhbGc..."
        - name: lastChangedFrom
          in: query
          required: true
          description: 조회 시작일 (yyyy-MM-dd'T'HH:mm:ss.SSSXXX)
          schema:
            type: string
            example: "2025-09-01T00:00:00.000+09:00"
        - name: lastChangedTo
          in: query
          required: true
          description: 조회 종료일
          schema:
            type: string
            example: "2025-09-19T23:59:59.999+09:00"
        - name: lastChangedType
          in: query
          required: true
          description: 조회 기준 (PAID_DATE, PRODUCT_ORDER_DATE, CLAIM_DATE 등)
          schema:
            type: string
            enum: [PAID_DATE, PRODUCT_ORDER_DATE, DISPATCHED_DATE, CLAIM_DATE]
            default: "PAID_DATE"
        - name: productOrderStatus
          in: query
          description: 주문 상태
          schema:
            type: string
            enum: [PAYMENT_WAITING, PAYED, DELIVERING, DELIVERED, CANCELED]
      responses:
        200:
          description: 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      type: object

  # ===== 주문 상태 조회 API =====
  /v1/pay-order/seller/product-orders/last-changed-statuses:
    get:
      tags:
        - 주문 관리
      summary: 최근 변경된 주문 상태 조회
      description: 최근 변경된 주문 상태를 조회합니다
      parameters:
        - name: Authorization
          in: header
          required: true
          description: "Bearer {access_token} 형식으로 입력"
          schema:
            type: string
            example: "Bearer eyJ0eXAiOiJKV1QiLCJhbGc..."
        - name: lastChangedFrom
          in: query
          required: true
          schema:
            type: string
            example: "2025-09-01T00:00:00.000+09:00"
        - name: lastChangedTo
          in: query
          required: true
          schema:
            type: string
            example: "2025-09-19T23:59:59.999+09:00"
      responses:
        200:
          description: 조회 성공

  # ===== 발송 처리 =====
  /v1/pay-order/seller/product-orders/dispatch:
    post:
      tags:
        - 주문 관리
      summary: 발송 처리
      description: 주문을 발송 처리합니다
      parameters:
        - name: Authorization
          in: header
          required: true
          description: "Bearer {access_token} 형식으로 입력"
          schema:
            type: string
            example: "Bearer eyJ0eXAiOiJKV1QiLCJhbGc..."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productOrderIds:
                  type: array
                  items:
                    type: string
                  example: ["2025091912345678"]
                deliveryMethod:
                  type: string
                  enum: [DELIVERY, DIRECT_DELIVERY, QUICK_SERVICE, VISIT_RECEIPT]
                  example: "DELIVERY"
                deliveryCompanyCode:
                  type: string
                  example: "CJGLS"
                trackingNumber:
                  type: string
                  example: "123456789012"
      responses:
        200:
          description: 발송 처리 성공

  # ===== 주문 취소 승인 =====
  /v1/pay-order/seller/product-orders/{productOrderId}/claim/cancel/approve:
    post:
      tags:
        - 주문 관리
      summary: 취소 승인
      description: 구매자가 요청한 취소를 승인합니다
      parameters:
        - name: Authorization
          in: header
          required: true
          description: "Bearer {access_token} 형식으로 입력"
          schema:
            type: string
            example: "Bearer eyJ0eXAiOiJKV1QiLCJhbGc..."
        - name: productOrderId
          in: path
          required: true
          description: 상품 주문 번호
          schema:
            type: string
            example: "2025091912345678"
      responses:
        200:
          description: 취소 승인 성공
